[env]
WASM_PROJECTS = "double-pendulum,host-bindings,connect-4"

[tasks.build_wasm]
script_runner = "@duckscript"
script = '''
is_release = eq ${CARGO_MAKE_PROFILE} "production"

l = split ${WASM_PROJECTS} ,
d = pwd

for i in ${l}
  p = join_path ${d} ${i}
  cd ${p}

  echo Building: ${i}

  exec --fail-on-error cargo fmt
  exec --fail-on-error cargo check

  if ${is_release}
    exec --fail-on-error cargo build --release
  else
    exec --fail-on-error cargo build
  end
end

cd ${d}

release ${l}
'''

[tasks.deploy_wasm]
dependencies = ["build_wasm"]
script_runner = "@duckscript"
script = '''
is_release = eq ${CARGO_MAKE_PROFILE} "production"
has_wasm_snip = which wasm-snip
has_wasm_snip = eq ${has_wasm_snip} ""
has_wasm_snip = not ${has_wasm_snip}
has_wasm_opt = which wasm-opt
has_wasm_opt = eq ${has_wasm_opt} ""
has_wasm_opt = not ${has_wasm_opt}

if ${has_wasm_snip}
  echo "Has wasm-snip"
else
  echo "No wasm-snip"
end
if ${has_wasm_opt}
  echo "Has wasm-opt"
else
  echo "No wasm-opt"
end

l = split ${WASM_PROJECTS} ,

for i in ${l}
  src_file = join_path ${i} target/wasm32-unknown-unknown

  if ${is_release}
    src_file = join_path ${src_file} release
  else
    src_file = join_path ${src_file} debug
  end

  f = replace ${i} - _
  f = concat ${f} ".wasm"
  src_file = join_path ${src_file} ${f}

  echo Copy ${src_file} to ${f}

  cp ${src_file} ${f}

  if ${has_wasm_snip}
    echo "Running wasm-snip"
    exec --fail-on-error wasm-snip --snip-rust-panicking-code ${f} -o ${f}
  end

  if ${has_wasm_opt}
    echo "Running wasm-opt"
    exec --fail-on-error wasm-opt -Oz ${f} -o ${f}
  end

end

release ${l}
'''
